# 4.2 TCP의 성능에 대한 고려

### 4.2.1 HTTP 트랜잭션 지연

- 트랜잭션을 처리하는 시간은 TPC 커넥션을 설정하고, 요청을 전송하고, 응답 메시지를 보내는 것에 비해 상당히 짧다.
- 대부분의 HTTP 지연은 TCP 네트워크 지연 때문에 발생한다.
- HTTP 트랜잭션을 지연시키는 원인은 여러 가지가 있다.
1. URI에 기술된 호스트에 클라이언트가 최근에 방문한 적이 없으면 URI에 있는 호스트 명을 IP주소로 변환하는데 수십 초의 시간이 걸린다.
2. 커넥션 설정 시간은 새로운 TCP 커넥션에서 항상 발생하는데, 보통 1~2초가 소요되지만 대량의 HTTP 트랜잭션이 만들어지면 소요시간이 크게 증가한다.
3. 커넥션이 맺어진 후 클라이언트의 HTTP 요청이 인터넷을 통해 전달되고 서버에서 처리하는 데에 시간이 소요된다.
4. 웹 서버가 HTTP 응답을 보내는 데에 시간이 소요된다.

### 4.2.3 TCP 커넥션 핸드셰이크 지연

- TCP 커넥션 핸드셰이크
![Untitled](https://feel5ny.github.io/images/2019/24/6.jpg)
    
1. 클라이언트는 새로운 TCP 커넥션 생성을 위해 작은 TCP 패킷(SYN플래그, 40~60바이트)을 서버에 보낸다.
2. 서버가 커넥션을 받으면 커넥션 매개변수를 산출한 후, 커넥션 요청이 받아들여졌음을 의미하는 ‘SYN’과 ‘ACK’플래그가 포함한 TCP 패킷을 클라이언트에 보낸다.
3. 클라이언트는 커넥션이 맺어진 후 서버에 다시 확인 응답 패킷과 데이터를 보낸다.

- 크기가 작은 HTTP 트랜잭션은 절반 이상의 시간을 TCP 구성에 쓴다.

### 4.2.4 확인응답 지연

- 각 TCP 세그먼트는 순번과 데이터 무결성 체크섬을 가지는데, 만약 송신자가 특정 시간 안에 확인 응답 메시지를 받지 못하면 오류로 팒단하여 데이터를 재전송한다.
- 확인응답은 크기가 작아서 TCP는 송출되는 데이터 패킷에 확인응답을 ‘편승(piggyback)’시킨다. 이는 네트워크를 효율적으로 사용하기 위함인데, 많은 TCP 스택은 ‘확인응답 지연’ 알고리즘을 구현한다.
- 확인응답 지연은 송출할 확인응답을 특정 시간(0.1~0.2초) 버퍼에 저장 후 송출 데이터 패킷을 찾는다. 찾지 못하면 별도 패킷을 만들어 전송된다.
- 요청과 응답의 두 가지 형식으로만 이루어지는 HTTP 방식은 지연이 자주 발생하는데, 원인이 되는 지연 관련 기능을 수정하거나 비활성화 할 수 있다.

### 4.2.5 TCP 느린 시작(slow start)

- 느린시작과 혼잡제어
![Untitled](https://velog.velcdn.com/images%2Fmu1616%2Fpost%2F71182a17-fef8-4d94-938b-2a19a628b7f1%2Fimage.png)
    
- 인터넷의 급작스러운 부하와 혼잡을 방지하기 위하여 TCP가 한번에 전송할 수 있는 패킷의 수를 제한한다.
- HTTP 트랜잭션에서 전송할 데이터의 양이 많으면 모든 패킷을 한 번에 전송할 수 없기 때문에, 한 개의 패킷만 우선 전송하고 확인응답을 받은 후 2개의 패킷을 보낸다. 이런식으로 다시 응답을 받으면 총 4개의 패킷을 보낼 수 있다.
- 혼잡제어 기능 때문에 새로운 커넥션은 이미 데이터를 주고받은 ‘튜닝’된 커넥션보다 느리다.

### 4.2.6 네이글(Nagle) 알고리즘과 TCP_NODELAY

- 네이글 알고리즘은 네트워크 효율을 위해 많은 양의 TCP데이터를  한 개의 덩어리로 합친다. 이 때 세그먼트가 최대 크기(수백 ~ 최대 1500바이트)가 되지 않으면 전송을 하지 않는다. 다른 모든 패킷이 확인응답을 받은 경우에는 최대크기가 되지 않아도 전송한다.
- HTTP 성능과 관련하여 네이글 알고리즘은 여러 문제를 발생시킨다.
1. 크기가 작은 HTTP 메시지는 패킷을 채우지 못해서 추가적인 데이터를 기다리며 지연된다.
2. 확인응답 지연과 함께 쓰일 경우 응답이 도착할 때까지 데이터 전송을 멈추고 확인응답 지연 알고리즘은 확인응답을 100~200밀리초 지연시킨다.

### 4.2.7 TIME_WAIT의 누적과 포트 고갈

- 성능 측정 시에 TIME_WAIT 포트 고갈은 심각한 성능 저하를 발생시킨다.
- TCP 커넥션의 엔드포인트에서 TCP 커넥션을 끊으면, 엔드포인트에서 커넥션 IP주소와 포트번호를 메모리에 기록한다. 이는 같은 주소와 포트번호를 사용하는 새로운 TCP 커넥션이 2MSL의 시간동안 생성되지 않도록 하기 위함인데, 성능 측정 시에 서버는 클라이언트가 접속할 수 있는 IP주소의 개수를 제한하고 서버에 접속하여 부하를 발생기키는 컴퓨터 수는 적기 때문에 가능한 연결 조합이 제한된다.
- 부하를 생성하는 장비를 많이 사용하거나 여러 가상 IP주소를 사용할 수 있지만, 커넥션을 너무 많이 맺거나 대기 상태의 제어 블록이 너무 많아지는 상황은 주의해야 한다.
